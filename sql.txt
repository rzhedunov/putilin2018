C:\Users\R20171220\Downloads\SQLEXPRADV_x64_RUS\

CREATE TABLE [dbo].[Voditel] (
    [Id]             INT        IDENTITY (1, 1) NOT NULL,
    [fio]            NCHAR (50) NOT NULL,
    [license_expire] DATE   NULL,
    [categories]     NCHAR (10) DEFAULT ('ABCD') NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

CREATE TABLE [dbo].[Группы задач] (
    [Id]              INT         IDENTITY (1, 1) NOT NULL,
    [Название группы] NCHAR (50)  NOT NULL,
    [Примечание]      NCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


CREATE TABLE [dbo].[Пункт доставки] (
    [Id]              INT         IDENTITY (1, 1) NOT NULL,
    [Название пункта] NCHAR (50)  NOT NULL,
    [Адрес]           NCHAR (100) DEFAULT ('-') NOT NULL,
    [Регулярность]    NCHAR (50)  DEFAULT ('-') NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


CREATE TABLE [dbo].[Получатель] (
    [Id]               INT        IDENTITY (1, 1) NOT NULL,
    [ФИО]              NCHAR (50) NOT NULL,
    [E-mail]           NCHAR (50) NOT NULL,
    [Телефон]          NCHAR (12) NOT NULL,
    [Пункт доставкиID] INT        NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    FOREIGN KEY ([Пункт доставкиID]) REFERENCES [dbo].[Пункт доставки] ([Id])
);

CREATE TABLE [dbo].[Тип ТС] (
    [Id]            INT        IDENTITY (1, 1) NOT NULL,
    [Название типа] NCHAR (50) DEFAULT ('??? ') NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


CREATE TABLE [dbo].[Задача] (
    [Id] INT IDENTITY (1, 1) NOT NULL,
    [Название задачи] NCHAR (50)  NOT NULL,
    [Группа задачID] INT  NOT NULL REFERENCES [dbo].[Группы задач],
    [Примечание]      NCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)    
);

CREATE TABLE [dbo].[Автомобиль] (
    [Id] INT IDENTITY (1, 1) NOT NULL,
    [Название автомобиля] NCHAR (50)  NOT NULL,
    [Госномер]      NCHAR (20) NULL,
    [Примечание]      NCHAR (100) NULL,
    [Тип ТСID] INT  NOT NULL REFERENCES [dbo].[Тип ТС],
    PRIMARY KEY CLUSTERED ([Id] ASC)    
);

CREATE TABLE [dbo].[Маршрут] (
    [Id] INT IDENTITY (1, 1) NOT NULL,
    [Название маршрута] NCHAR (50)  NOT NULL,
    [Примечание]      NCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)    
);

CREATE TABLE [dbo].[Пункты регулярного маршрута] (
    [Id] INT IDENTITY (1, 1) NOT NULL,
    [МаршрутID] INT  NOT NULL REFERENCES [dbo].[Маршрут],
    [Пункт доставкиID] INT NOT NULL REFERENCES [dbo].[Пункт доставки],    
    [ЗадачаID] INT NOT NULL REFERENCES [dbo].[Задача], 
    [Время плановое]    
    [Примечание]      NCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)    
);

CREATE TABLE [dbo].[Статус заявки] (
    [Id] INT IDENTITY (1, 1) NOT NULL PRIMARY KEY ,
    [Статус] NCHAR (30) NOT NULL default '-'
);

CREATE TABLE [dbo].[Ремонт] (
    [Id] INT IDENTITY (1, 1) NOT NULL PRIMARY KEY ,
    [Дата заявки] date not null default getdate(),   
	  [АвтомобильID] INT  NOT NULL REFERENCES [dbo].[Автомобиль],
	  [Содержание] NCHAR (100) default '-',	
    [Дата выполнения] date not null default getdate()+7,   
    [Статус заявкиID] int not null default 0 REFERENCES [dbo].[Статус заявки],
    [Стоимость ремонта] int not null default 0,
    [Примечание] NCHAR (100) NOT NULL default '-'
);

CREATE TABLE [dbo].[Пункты рейса] (
    [Id] INT IDENTITY (1, 1) NOT NULL PRIMARY KEY,
    [РейсID] INT  NOT NULL REFERENCES [dbo].[Рейс],
    [Пункт доставкиID] INT NOT NULL REFERENCES [dbo].[Пункт доставки],
    [ПолучательID] INT NOT NULL REFERENCES [dbo].[Получатель],	
    [ЗадачаID] INT NOT NULL REFERENCES [dbo].[Задача], 
    [Время плановое] time not null default '09:00',    
    [УсловныйКод] INT NOT NULL default round(rand()*1000,0),
	[Время фактическое] time not null default '09:00',	
    [Примечание] NCHAR (100) NOT NULL default '-'     
);

-------------------------------------
ALTER procedure [dbo].[update_arrival_time] (
    @point_of_race_ID int,
    @confirmation_code int
) 
AS
BEGIN	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Update [Пункты рейса] set [Время фактическое]=convert(time(0), dateadd(hour,1, getdate())) WHERE [Id]=@point_of_race_ID and [УсловныйКод]=@confirmation_code;
END
--------------------------


-------------------------------------
USE [zhedunov_v50ca]
GO
/****** Object:  UserDefinedFunction [dbo].[get_last_racenumber]    Script Date: 27.06.2018 9:18:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER function [dbo].[get_last_racenumber] ()

RETURNS @returnList TABLE(maxval int)
AS
BEGIN	-- SET NOCOUNT ON added to prevent extra result sets from
	insert into @returnList
	select max(id) from [Рейс];
	return;
END
---------------------------------------------
create table fuel_cost (
id int primary key,
cost float default 0
)
insert into fuel_cost values(1, 40);
select dbo.get_last_fuel_cost()
----------------------
create function [dbo].[get_cost_report](
	@date_start date,
	@date_end date
) RETURNS @returnList TABLE(groupname nvarchar(50), taskname nvarchar(50), fuel_paid float, repair_paid float, total_paid float)
AS
BEGIN
insert into @returnList values (N'Группа 1а', N'Задача 1',12,13,14);
insert into @returnList values (N'Группа 1б', N'Задача 2',22,23,24);
return;
END
select * from dbo.get_cost_report(getdate(), getdate())
-----------------------
Новая версия
USE [zhedunov_v50ca]
GO
/****** Object:  UserDefinedFunction [dbo].[get_cost_report]    Script Date: 28.06.2018 10:08:31 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER function [dbo].[get_cost_report](
	@date_start date,
	@date_end date
) RETURNS @returnList TABLE(groupname nvarchar(50), taskname nvarchar(50), fuel_paid float, repair_paid float, total_paid float)
AS
BEGIN
	set @date_end = dateadd(day, 1, @date_end);
	
	--составляем таблицу стоимости ГСМ и ремонтов по рейсам	
	declare @racetable TABLE(raceid int, autoid int, taskid int, racefuelcost float, raceautocnt int, autorepaircost float, racerepaircost float);
	insert into @racetable
	select р.Id, 
		р.АвтомобильID, 
		р.ЗадачаID, 
		0.0 + р.[Расход ГСМ] * dbo.get_last_fuel_cost(),
		(select count(*) from Рейс р2 where р2.[Дата рейса]>@date_start and р2.[Дата рейса]<@date_end and р2.АвтомобильID = р.АвтомобильID),
		0.0 + isnull((select sum(рм.[Стоимость ремонта]) from [Ремонт] рм where рм.[Дата выполнения]>@date_start and рм.[Дата выполнения]<@date_end and рм.АвтомобильID = р.АвтомобильID), 0.0),
		(0.0 + isnull((select sum(рм.[Стоимость ремонта]) from [Ремонт] рм where рм.[Дата выполнения]>@date_start and рм.[Дата выполнения]<@date_end and рм.АвтомобильID = р.АвтомобильID), 0.0))/(select count(*) from Рейс р2 where р2.[Дата рейса]>@date_start and р2.[Дата рейса]<@date_end and р2.АвтомобильID = р.АвтомобильID)
	from [Рейс] р
	where р.[Дата рейса]>@date_start and р.[Дата рейса]<@date_end

	--Основная таблица отчета - заполнение и длина
	declare @reporttable TABLE(groupname nvarchar(50), taskname nvarchar(50), fuelcost float, repaircost float, totalcost float);
	insert into @reporttable
	select г.[Название группы], 
		з.[Название задачи], 
		round(isnull((select sum(racefuelcost) from @racetable r2 where r2.taskid = з.Id),0.0),2)   'fuelcost',
		round(isnull((select sum(racerepaircost) from @racetable r2 where r2.taskid = з.Id),0.0),2) 'repaircost',
		round(isnull((select sum(racefuelcost) from @racetable r2 where r2.taskid = з.Id),0.0) + isnull((select sum(racerepaircost) from @racetable r2 where r2.taskid = з.Id),0.0),2) 'totalcost'
	from [Группы задач] г, Задача з
	where г.Id = з.[Группа задачID] order by г.[Название группы], з.[Название задачи]

	insert into @returnList 
	select * from @reporttable order by groupname, taskname;

return;
END
------------------------

create function [dbo].[get_last_fuel_and distance]() 
RETURNS @returnList TABLE(autoid int, fuel float, distance int)
AS
BEGIN

insert into @returnList
select  
a.id,
isnull((select sum(р1.[Остаток ГСМ на въезде]+р1.[Выдано ГСМ]-р1.[Расход ГСМ]) from Рейс р1 
	where р1.АвтомобильID = a.Id and р1.id in (select max(р2.id) from Рейс р2 where р1.АвтомобильID=р2.АвтомобильID)),0),
isnull((select sum(р1.Пробег) from Рейс р1 
	where р1.АвтомобильID = a.Id and р1.id in (select max(р2.id) from Рейс р2 where р1.АвтомобильID=р2.АвтомобильID)),-1)
from [Автомобиль] a;
return;
END
------------------------------------------------------
