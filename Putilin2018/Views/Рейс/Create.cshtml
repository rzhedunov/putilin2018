@model Putilin2018.Models.Рейс

@{
    ViewBag.Title = "Добавить новый рейс";
}

<h2>Добавить новый рейс</h2>

<script language="javascript">
    var options = {
        day: 'numeric',
        month: 'numeric',
        year: 'numeric'
    }

    function getDate(str) {
        var date = new Date(str);
        return date.toLocaleString('ru', options)
    }

    function ChangeDate() {
        var elem = document.getElementById('racedate');
        var elem2 = document.getElementById('dp1');
        //elem.textContent = elem2.value;
        elem.textContent = getDate(elem2.value);
        //alert(textContent);
    }

    function GetFuel(autoid) {
        var array1 = [];
        var array2 = [];
        n = 0;
        @{
            foreach (var item in ViewBag.autos)
            {
                //<text> alert("@item.fuel"); </text>
                <text> array1[n] = @item.autoid; array2[n++] = @item.fuel; </text>
            }
        }

        for (i=0; i<n; i++)
            if (array1[i] == autoid){
                return array2[i];
            }
        return -1;
    }

    function GetDistance(autoid) {
        var array1 = [];
        var array2 = [];
        n = 0;
        @{
            foreach (var item in ViewBag.autos)
            {
                //<text> alert("@item.fuel"); </text>
                <text> array1[n] = @item.autoid; array2[n++] = @item.distance; </text>
            }
        }

        for (i=0; i<n; i++)
            if (array1[i] == autoid){
                return array2[i];
            }
        return -1;
    }

    function SetFuelAndDistance() {
        var elem = document.getElementById('autolist');
        var autoid = elem.value;

        var elem2 = document.getElementById('fuel');
        var elem3 = document.getElementById('distance');

        elem2.value = GetFuel(autoid);
        elem3.value = GetDistance(autoid);
    }
</script>






@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Рейс</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Номер_путевого_листа, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Номер_путевого_листа, new { htmlAttributes = new { @class = "form-control", @Value = ViewBag.NewListNumber } })
                @Html.ValidationMessageFor(model => model.Номер_путевого_листа, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Дата_рейса, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table border="0">
                    <tr>
                        <td width="40"><div id="racedate">@ViewBag.RaceDate2</div></td>
                        <td>
                            @Html.EditorFor(model => model.Дата_рейса, new { htmlAttributes = new { @id = "dp1", @class = "form-control", style = "width:70px;", @Value = ViewBag.RaceDate, @onChange = "ChangeDate();" } })
                        </td>
                    </tr>
                </table>
                @Html.ValidationMessageFor(model => model.Дата_рейса, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Остаток_ГСМ_на_въезде, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Остаток_ГСМ_на_въезде, new { htmlAttributes = new { @id = "fuel", @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Остаток_ГСМ_на_въезде, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Выдано_ГСМ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Выдано_ГСМ, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                @Html.ValidationMessageFor(model => model.Выдано_ГСМ, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Нач_спидометр, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Нач_спидометр, new { htmlAttributes = new { @id = "distance", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Нач_спидометр, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Норма, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Норма, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                @Html.ValidationMessageFor(model => model.Норма, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Пробег, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Пробег, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                @Html.ValidationMessageFor(model => model.Пробег, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Расход_ГСМ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Расход_ГСМ, new { htmlAttributes = new { @class = "form-control", @Value = "0" } })
                @Html.ValidationMessageFor(model => model.Расход_ГСМ, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ВодительID, "ВодительID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ВодительID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ВодительID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ЗадачаID, "ЗадачаID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ЗадачаID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ЗадачаID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.АвтомобильID, "АвтомобильID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("АвтомобильID", null, htmlAttributes: new { @id = "autolist", @class = "form-control", @onChange = "SetFuelAndDistance();" })
                @Html.ValidationMessageFor(model => model.АвтомобильID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Примечание, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Примечание, new { htmlAttributes = new { @class = "form-control", @Value = "-" } })
                @Html.ValidationMessageFor(model => model.Примечание, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Добавить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Вернуться к списку", "Index")
</div>






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
